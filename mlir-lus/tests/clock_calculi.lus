lus.node dom @test () -> (i32) {
  %a1 = constant 42: i32 // .
  %a2 = constant 43: i32 // .
  %c1 = constant 1: i1 // .
  %c2 = constant 0: i1 // . when c1
  %b1 = lus.when %c1 %a1: i32 // . when c1
  %b2 = lus.when not %c1 %a2: i32 // . whenot c1
  %d1 = lus.merge %c1 %b1 %b2: i32 // .
  %d2 = lus.when %c2 %b1: i32 // (. when c1) when c2
  %d5 = lus.when not %c2 %b1: i32 // (. when c1) whenot c2
  %d6 = lus.merge %c2 %d2 %d5: i32 // . when c1
  %a3 = constant 84: i32 // (. when c1) when c2
  %a4 = constant 21: i32 // . whenot c1
  %d3 = lus.merge %c1 %b1 %a4: i32 // .
  %d4 = addi %d2, %a3: i32 // (. when c1) when c2
  lus.yield (%d1: i32)
}